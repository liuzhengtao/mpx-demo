<template>
  <view class="container">
    <view class="wrap" wx:style="{{dynamicStyle}}">
       <view>{{inputVal}}</view>
       <view>{{reverser}}</view>
       <view>{{__mpx_mode__}}</view>
    </view>
    <view class="wrap_a">
      <view wx:for="{{list}}" wx:class="{{ {active:item.active} }}" bindtap="handleTap(index)" >
        <view>{{item.content}}</view>
        <input type="text" wx:model="{{list[index].content}}"/>
      </view>
      <view>{{count}}</view>
      <view bindtap="increment(6)">点击增加</view>
      <view bindtap="getActives">查看激活</view>
    </view>
  </view>
  
</template>
<style lang="stylus">
  .container
    width 300px
    height 300px
    font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif
    font-weight 300;
    // line-height 1.4em;
    background: #f5f5f5;
    color: #4d4d4d;
    border 1px solid #000
    margin 50px auto
    position relative
    box-shadow 1px 1px 1px #000
    .wrap_a
      position absolute
      top 145px
      left 50px
      .active
        color green
        font-size 16px
    .wrap
      width 200px
      height 100px
      border 1px solid #000
      position absolute
      text-align center
      // line-height 100px
      left 50px
      top 25px
</style>
<script>
  import { createPage } from '@mpxjs/core'
  import store from '../../stores'
  import { get } from '../util'
const baseUri = 'http://www.tp5demo.com:84/admin.php/'
createPage({
    onLoad () {},
    data: {
      inputVal: 'helloworld'
    },
    computed: {
      ...store.mapState(['list', 'count']),
      ...store.mapGetters(['activeList']),
      reverser () {
        return this.inputVal.split('').reverse().join('')
      },
      dynamicStyle () {
        return {
          fontSize: '28px',
          color: 'red'
        }
      }
    },
    methods: {
      ...store.mapMutations(['increment']),
      handleTap (index) {
        this.list[index].active = !this.list[index].active
      },
      getActives (e) {
        get(baseUri + 'index/getall', { name: '刘正涛' }).then(res => {
          console.log(res.data)
        })
      }
    }
  })
</script>

<script type="application/json">
  {
    "usingComponents": {

    }
  }
</script>
